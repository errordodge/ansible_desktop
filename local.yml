---
- name: Bootstrap MacOS NavIt
  hosts: localhost
  become: false
  vars:
    user_name: steinarvollebaek
    brew_cask_packages:
      - powershell
      - naisdevice
      - google-cloud-sdk
      - docker
      - firefox
      - google-chrome
      - google-drive
      - iterm2
      - slack
      - spectacle
      - zoom
      - vmware-horizon-client
      - postman
      - microsoft-teams
      - bitwarden
    brew_packages:
      - ansible
      - azure-cli
      - bicep
      - kubectl
      - ca-certificates
      - git
      - wget
      - zsh
      - python@3.10
      - openssl@3
      - htop
      - tmux

    install_homebrew_if_missing: false
    upgrade_homebrew_packages: false

  pre_tasks:
    - name: Ensuring Homebrew Is Installed
      stat:
        path: /usr/local/bin/brew
      register: homebrew_check

    - name: Fail If Homebrew Is Not Installed and install_homebrew_if_missing Is False
      fail:
        msg: Homebrew is missing...Install from http://brew.sh/
      when:
        - not homebrew_check.stat.exists
        - not install_homebrew_if_missing

    - name: Installing Homebrew
      shell: /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
      when:
        - not homebrew_check.stat.exists
        - install_homebrew_if_missing

  tasks:
    - name: Updating Homebrew
      homebrew:
        update_homebrew: true
      when: homebrew_check.stat.exists

    - name: Upgrading Homebrew Packages
      homebrew:
        upgrade_all: "{{ upgrade_homebrew_packages }}"
      register: result
      until: result is successful
      when: homebrew_check.stat.exists

    - name: Installing Homebrew Cask Packages
      homebrew_cask:
        name: "{{ brew_cask_packages }}"
        state: present
      register: result
      until: result is successful
      when: homebrew_check.stat.exists

    - name: Installing Homebrew Packages
      homebrew:
        name: "{{ brew_packages }}"
        state: present
      register: result
      until: result is successful
      when: homebrew_check.stat.exists

    - name: copy .zshrc file
      copy:
        src: files/.zshrc
        dest: /Users/{{ user_name }}/.zshrc
        owner: "{{ user_name }}"
        group: staff

    - name: copy .gitconfig file
      copy:
        src: files/.gitconfig
        dest: /Users/{{ user_name }}/.gitconfig
        owner: "{{ user_name }}"
        group: staff

    - name: copy admin file
      copy:
        src: files/admin.sh
        dest: /Users/{{ user_name }}/bin/admin.sh
        owner: "{{ user_name }}"
        group: staff

    - name: add admin cron job
      cron:
        name: activate admin
        user: "{{ user_name }}"
        minute: "*/5"
        job: cd ~/bin && ./admin.sh

    - name: copy update-all file
      copy:
        src: files/update-all.sh
        dest: /Users/{{ user_name }}/update-all.sh
        owner: "{{ user_name }}"
        group: staff

    - name: copy kubeconfig file
      copy:
        src: files/kubeconfig
        dest: /Users/{{ user_name }}/.kube/config
        owner: "{{ user_name }}"
        group: staff

    - name: add update-all cron job
      cron:
        name: update all
        user: "{{ user_name }}"
        minute: "*/30"
        job: cd ~/bin && ./update-all.sh

    - name: add ansible-pull cron job
      cron:
        name: ansible auto-provision
        user: "{{ user_name }}"
        minute: "*/5"
        job: ansible-pull -o -U https://github.com/errordodge/ansible_desktop.git
